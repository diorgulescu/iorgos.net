<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on iorgos.net</title>
    <link>https://iorgos.net/tags/windows/</link>
    <description>Recent content in windows on iorgos.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 May 2021 22:00:00 +0000</lastBuildDate><atom:link href="https://iorgos.net/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying Microsoft Hyper-V Server 2019 without a Domain Controller</title>
      <link>https://iorgos.net/posts/deploy-hyperv-2019/</link>
      <pubDate>Thu, 20 May 2021 22:00:00 +0000</pubDate>
      
      <guid>https://iorgos.net/posts/deploy-hyperv-2019/</guid>
      <description>Prerequisites  For fully managing the Hyper-V server remotely, you need to install Remote Server Administration Tools Download the Hyper-V 2019 ISO from Microsoft Rufus USB flashing tool A decent PC LOL  Installation Well, not much to say here. Pretty straightforward, just like a normal Windows installation.
Once the ISO is downloaded, stick an USB stick into your PC and launch Rufus. Select the ISO file you’ve just downloaded, make sure the USB stick is selected and check that GPT is used.</description>
    </item>
    
    <item>
      <title>Quickly creating fixed sized files in Linux &amp; Windows</title>
      <link>https://iorgos.net/posts/create-fixed-sized-files/</link>
      <pubDate>Wed, 24 Mar 2021 22:00:00 +0000</pubDate>
      
      <guid>https://iorgos.net/posts/create-fixed-sized-files/</guid>
      <description>Often times, while working as a Software Test Engineer, I encountered situations in which the software I was testing relied a lot on available disk space. If that wasn’t the case, surely it had a way to upload files to it (either through a WEB-UI or by sending them over a certain network protocol). So, I was either going to make sure the device/machine that program ran on would end up without any available disk space at a given point in time, or try to crash the whole program by feeding it large dummy or random binary files.</description>
    </item>
    
    <item>
      <title>Aliases &amp; Profiles in PowerShell</title>
      <link>https://iorgos.net/posts/aliases-profiles-powershell/</link>
      <pubDate>Fri, 12 Feb 2021 22:00:00 +0000</pubDate>
      
      <guid>https://iorgos.net/posts/aliases-profiles-powershell/</guid>
      <description>Coming from a Linux background, I found myself looking for a way to define aliases in PowerShell. You know, like one does in bash, sh and the likes. PowerShell is one environment I believe people should understand and know how to use, at least at the bare functional level. It really does not matter if you prefer to use bash or tchor other UNIX CLIs. The truth is we live &amp;amp; work in mixed environments and it’s worth knowing how to orient yourself in a “mixed situation”.</description>
    </item>
    
    <item>
      <title>SSH key-based authentication in Windows 10 (using no password)</title>
      <link>https://iorgos.net/posts/ssh-auth-windows10/</link>
      <pubDate>Sun, 01 Nov 2020 22:00:00 +0000</pubDate>
      
      <guid>https://iorgos.net/posts/ssh-auth-windows10/</guid>
      <description>I found this solution here: []. Thanks a lot for that! Just adding this to my own “docs base” for personal future reference.
Working with Linux/UNIX machines, I rely a lot on SSH. Thus, not having to type passwords each time I open a new session is a great plus. Achieving this on Linux systems is trivial, since you have the ssh-copy-id command at hand. But, on Windows, that’s missing. Luckily, there is a (logical) way around that, instead of adding keys by hand in the remote server’s authorized_keys file (like I used to do).</description>
    </item>
    
  </channel>
</rss>
